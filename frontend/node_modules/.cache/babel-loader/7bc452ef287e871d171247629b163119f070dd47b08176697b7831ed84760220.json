{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chara\\\\OneDrive\\\\Desktop\\\\Short programming project\\\\project\\\\frontend\\\\src\\\\components\\\\home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from '../App';\nimport Button from 'react-bootstrap/Button';\nimport ProjectCard from './projectCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst URL = \"http://localhost:5000/\";\nconst projectsURL = URL + \"projects/\";\nconst Home = params => {\n  _s();\n  const [user, setUser] = useState({\n    username: params.user.username,\n    location: params.user.location\n  });\n  const [projects, setProjects] = useState([]);\n  const getProjects = async () => {\n    console.log(\"getProjects() called \" + user.username);\n    try {\n      const res = await fetch(projectsURL, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username: user.username\n        })\n      });\n      const data = await res.json();\n      console.log(data);\n      setProjects(data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  useState(() => {\n    getProjects();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome \", user.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Location: \", user.location]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), (projects === null || projects === void 0 ? void 0 : projects.length) > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: projects.map(project => /*#__PURE__*/_jsxDEV(ProjectCard, {\n          project: project\n        }, project.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"No projects found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Home, \"QfNIa96RaLyPqwbDaKF88fSWN+Q=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","App","Button","ProjectCard","jsxDEV","_jsxDEV","Fragment","_Fragment","URL","projectsURL","Home","params","_s","user","setUser","username","location","projects","setProjects","getProjects","console","log","res","fetch","method","headers","body","JSON","stringify","data","json","err","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","map","project","id","_c","$RefreshReg$"],"sources":["C:/Users/chara/OneDrive/Desktop/Short programming project/project/frontend/src/components/home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport App from '../App';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ProjectCard from './projectCard';\r\n\r\nconst URL = \"http://localhost:5000/\";\r\nconst projectsURL = URL + \"projects/\";\r\n\r\nconst Home = (params) => {\r\n\r\n    const [user, setUser] = useState({\r\n        username: params.user.username,\r\n        location: params.user.location,\r\n    });\r\n\r\n    const [projects, setProjects] = useState([]);\r\n\r\n    const getProjects = async () => {\r\n        console.log(\"getProjects() called \" + user.username);\r\n        try {\r\n            const res = await fetch(projectsURL, {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({ username: user.username })\r\n            });\r\n\r\n            const data = await res.json();\r\n            console.log(data);\r\n            setProjects(data);\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    useState(() => {\r\n        getProjects();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <h1>Welcome {user.username}</h1>\r\n                <h4>Location: {user.location}</h4>\r\n                {projects?.length > 0 ? (\r\n                    <div className='container'>\r\n                        {projects.map((project) => (\r\n                            <ProjectCard project={project} key={project.id} />\r\n                        ))}\r\n                    </div>\r\n                ) : (\r\n                    <div className='empty'>\r\n                        <h2>No projects found</h2>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}